server.address=0.0.0.0
eureka.client.serviceUrl.defaultZone = ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE}
eureka.client.register-with-eureka= ${EUREKA_CLIENT_REGISTER_WITH_EUREKA}
eureka.client.fetch-registry=${EUREKA_CLIENT_FETCH_REGISTRY}
eureka.client.healthcheck.enabled=${EUREKA_CLIENT_HEALTHCHECK_ENABLED}
#eureka.client.instance-info-replication-interval-seconds=30
#/eureka
server.servlet.context-path= ${SERVER_SERVLET_CONTEXT_PATH}
server.port= ${SERVER_PORT}
spring.application.name = ${SPRING_APPLICATION_NAME}

spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}
spring.datasource.hikari.minimum-idle=${SPRING_DATASOURCE_HIKARI_MINIMUM_IDLE}
spring.datasource.hikari.maximum-pool-size=${SPRING_DATASOURCE_HIKARI_MAXIMUM_POOL_SIZE}
#logging.level.org.springframework.data.jpa=DEBUG
spring.jpa.show-sql = ${SPRING_JPA_SHOW_SQL}
spring.jpa.properties.hibernate.format_sql=${SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL}
spring.jpa.hibernate.ddl-auto = ${SPRING_JPA_HIBERNATE_DDL_AUTO}
#spring.jpa.properties.hibernate.dialect = ${SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT}
logging.level.org.hibernate.sql = OFF
logging.level.org.hibernate.type.descriptor.sql=TRACE
#hibernate.id.new_generator_mappings=true
spring.jackson.serialization.write-dates-as-timestamps=${SPRING_JACKSON_SERIALIZATION_WRITE_DATES_AS_TIMESTAMPS}
spring.main.allow-circular-references=true
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=${LOGGING_LEVEL_ORG_HIBERNATE_TYPE_DESCRIPTOR_SQL_BASICBINDER}
logging.configuration=${LOGGING_CONFIGURATION}

#spring.jackson.date-format=${SPRING_JACKSON_DATE_FORMAT}


spring.main.allow-bean-definition-overriding=true

#enableLoggingRequestDetails=true
#spring.boot.admin.client.instance.name=InventoryManagementSystem
#spring.boot.admin.client.url=http://localhost:9090
#spring.boot.admin.client.instance.name=Inventory Management System
#spring.boot.admin.client.username=admin
#spring.boot.admin.client.password=admin

###########---- TOPICS ----########### NEW.ITEM.DATA.INCOMING WMS.ITEM.DATA.INCOMING
wms.category.url=${WMS_CATEGORY_URL}
wms.item.url=${WMS_ITEM_URL}
new.item.data.incoming = ${NEW_ITEM_DATA_INCOMING}
wms.item.data.incoming = ${WMS_ITEM_DATA_INCOMING}
management.endpoint.health.enabled=${MANAGEMENT_ENDPOINT_HEALTH_ENABLED}
management.info.env.enabled=${MANAGEMENT_INFO_ENV_ENABLED}
management.endpoint.shutdown.enabled=${MANAGEMENT_ENDPOINT_SHUTDOWN_ENABLED}
management.endpoints.web.exposure.include=${MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE}
management.endpoint.health.show-details=${MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS}

###########---- HTTP TIMEOUTCONFIG ----###########
connection.timeout=${CONNECTION_TIMEOUT}
response.timeout=${RESPONSE_TIMEOUT}
connection.request.timeout=${CONNECTION_RESPONSE_TIMEOUT}

spring.config.debug=${SPRING_CONFIG_DEBUG}
spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS}
spring.kafka.consumer.group-id=${SPRING_KAFKA_CONSUMER_GROUP_ID}
spring.kafka.consumer.auto-offset-reset=${SPRING_KAFKA_CONSUMER_AUTO_OFFSET_RESET}
spring.kafka.consumer.enable-auto-commit=${SPRING_KAFKA_CONSUMER_ENABLE_AUTO_COMMIT}
spring.kafka.listener.ack-mode=${SPRING_KAFKA_LISTENER_ACK_MODE}
spring.kafka.consumer.key-deserializer=${SPRING_KAFKA_CONSUMER_KEY_DESERIALIZER}
spring.kafka.consumer.value-deserializer=${SPRING_KAFKA_CONSUMER_VALUE_DESERIALIZER}
spring.kafka.producer.key-serializer=${SPRING_KAFKA_PRODUCER_KEY_SERIALIZER}
spring.kafka.producer.value-serializer=${SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER}